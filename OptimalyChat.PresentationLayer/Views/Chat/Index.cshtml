@model OptimalyChat.PresentationLayer.ViewModels.ChatViewModel
@{
    ViewData["Title"] = Model.PageTitle;
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/chat.css" asp-append-version="true" />
}

<div class="row">
    <!-- Projects & Conversations Sidebar -->
    <div class="col-md-3">
        <!-- Projects -->
        <div class="projects-sidebar mb-3">
            <div class="sidebar-header">
                <h5><i class="fas fa-folder-open mr-2"></i>Projects</h5>
                <a asp-action="CreateProject" class="btn btn-sm btn-primary">
                    <i class="fas fa-plus"></i>
                </a>
            </div>
            <div class="sidebar-body">
                @foreach (var project in Model.Projects)
                {
                    <div class="project-item @(project.Id == Model.CurrentProject?.Id ? "active" : "")" 
                         onclick="window.location.href='@Url.Action("Index", new { projectId = project.Id })'">
                        <i class="@(project.IsEncrypted ? "fas fa-lock" : "fas fa-folder") mr-2"></i>
                        @project.Name
                    </div>
                }
            </div>
        </div>

        <!-- Conversations -->
        @if (Model.CurrentProject != null)
        {
            <div class="projects-sidebar">
                <div class="sidebar-header">
                    <h5><i class="fas fa-comments mr-2"></i>Conversations</h5>
                    <button type="button" class="btn btn-sm btn-primary" id="newConversation">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
                <div class="sidebar-body">
                    @foreach (var conversation in Model.Conversations)
                    {
                        <div class="conversation-item @(conversation.Id == Model.CurrentConversation?.Id ? "active" : "")" 
                             onclick="window.location.href='@Url.Action("Index", new { projectId = Model.CurrentProject.Id, conversationId = conversation.Id })'">
                            <div class="conversation-title">@conversation.Title</div>
                            @if (!string.IsNullOrEmpty(conversation.LastMessagePreview))
                            {
                                <div class="conversation-preview">@conversation.LastMessagePreview</div>
                            }
                            <div class="conversation-meta">
                                <span class="conversation-time">@conversation.LastMessageAt?.ToString("MMM dd")</span>
                                <span class="message-count">@conversation.MessageCount</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Chat Area -->
    <div class="col-md-9">
        @if (Model.CurrentConversation != null)
        {
            <div class="chat-container">
                <!-- Chat Header -->
                <div class="chat-header">
                    <h3 id="conversationTitle">@Model.CurrentConversation.Title</h3>
                    <div class="chat-tools">
                        <!-- Model Selector -->
                        <select id="modelSelector" class="form-control form-control-sm">
                            @if (Model.AvailableModels.Any())
                            {
                                @foreach (var aiModel in Model.AvailableModels)
                                {
                                    @if (aiModel.Id == Model.SelectedModelId)
                                    {
                                        <option value="@aiModel.Id" data-model-id="@aiModel.ModelId" selected>
                                            @aiModel.Name
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@aiModel.Id" data-model-id="@aiModel.ModelId">
                                            @aiModel.Name
                                        </option>
                                    }
                                }
                            }
                            else
                            {
                                <option value="">No models available</option>
                            }
                        </select>
                        <button type="button" class="btn btn-tool" id="editTitle" title="Edit title">
                            <i class="fas fa-pencil-alt"></i>
                        </button>
                        <button type="button" class="btn btn-tool" id="deleteConversation" title="Delete conversation">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Messages Container -->
                <div class="chat-messages" id="messagesContainer">
                    @foreach (var message in Model.Messages)
                    {
                        if (message.Role == "user")
                        {
                            <!-- User Message -->
                            <div class="message user">
                                <div class="message-content">
                                    <div class="message-bubble">
                                        <span class="message-text">@message.Content</span>
                                    </div>
                                    <div class="message-info">
                                        <span class="message-time">@message.CreatedAt.ToString("HH:mm")</span>
                                        @if (message.TokenCount > 0)
                                        {
                                            <span class="message-stats">
                                                <i class="fas fa-coins"></i> @message.TokenCount
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <!-- AI Message -->
                            <div class="message assistant">
                                <div class="message-content">
                                    <div class="message-bubble">
                                        <span class="message-text">@Html.Raw(message.Content)</span>
                                    </div>
                                    <div class="message-info">
                                        <span class="message-model">@(string.IsNullOrEmpty(message.Model) ? "AI Assistant" : message.Model)</span>
                                        <span class="message-time">@message.CreatedAt.ToString("HH:mm")</span>
                                        @if (message.TokenCount > 0 || message.ResponseTimeMs.HasValue)
                                        {
                                            <span class="message-stats">
                                                @if (message.TokenCount > 0)
                                                {
                                                    <span><i class="fas fa-coins"></i> @message.TokenCount</span>
                                                }
                                                @if (message.ResponseTimeMs.HasValue)
                                                {
                                                    <span><i class="fas fa-clock"></i> @message.ResponseTimeMs.Value ms</span>
                                                }
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    
                    <!-- Typing Indicator -->
                    <div id="typingIndicator" class="message assistant d-none">
                        <div class="message-content">
                            <div class="typing-indicator">
                                <div class="typing-dots">
                                    <span></span>
                                    <span></span>
                                    <span></span>
                                </div>
                            </div>
                            <div class="message-info">
                                <span class="message-model">AI Assistant</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Input Area -->
                <div class="chat-input-area">
                    <form id="messageForm">
                        <div class="chat-input-group">
                            <div class="chat-input-wrapper">
                                <textarea id="messageInput" 
                                          placeholder="Type a message..." 
                                          rows="1"></textarea>
                            </div>
                            <button type="submit" class="send-button" id="sendButton">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        }
        else if (Model.CurrentProject != null)
        {
            <!-- No Conversation Selected -->
            <div class="card">
                <div class="card-body text-center" style="padding: 100px 20px;">
                    <i class="fas fa-comments fa-5x text-muted mb-4"></i>
                    <h3 class="text-muted">No conversation selected</h3>
                    <p class="text-muted">Select a conversation from the list or create a new one to start chatting.</p>
                    <button class="btn btn-primary btn-lg" id="newConversationCenter">
                        <i class="fas fa-plus-circle"></i> New Conversation
                    </button>
                </div>
            </div>
        }
        else
        {
            <!-- No Project Selected -->
            <div class="card">
                <div class="card-body text-center" style="padding: 100px 20px;">
                    <i class="fas fa-folder-open fa-5x text-muted mb-4"></i>
                    <h3 class="text-muted">No project selected</h3>
                    <p class="text-muted">Select a project from the list or create a new one to start.</p>
                    <a href="@Url.Action("CreateProject")" class="btn btn-primary btn-lg">
                        <i class="fas fa-plus-circle"></i> Create Project
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<!-- Connection Status -->
@if (!Model.IsConnected)
{
    <div class="alert alert-warning alert-dismissible fade show position-fixed" style="bottom: 20px; right: 20px; z-index: 1050;">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <h5><i class="icon fas fa-exclamation-triangle"></i> Connection Issue</h5>
        @Model.ConnectionError
    </div>
}

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script>
        window.chatConfig = {
            hubUrl: '/chathub',
            projectId: @(Model.CurrentProject?.Id ?? 0),
            conversationId: @(Model.CurrentConversation?.Id ?? 0)
        };
    </script>
    <script src="~/js/chat.js"></script>
}